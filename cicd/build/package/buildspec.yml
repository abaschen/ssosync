version: 0.2

env:
  variables:
    ShareWith: "NOT-SHARED"
    SAR_TEMPLATE: sar-template.json
    SAM_CLI_TELEMETRY: 0
phases:
  pre_build:
    commands:
      # Print all environment variables (handy for AWS CodeBuild logs)
      - env

      # Check that the files need to package exist
      - ls README.md
      - ls SAR.md
      - ls -R $CODEBUILD_SRC_DIR_Built/dist
      - ls $CODEBUILD_SRC_DIR_Built/dist/ssosync_linux_arm64_v8.2/ssosync
      - ls $CODEBUILD_SRC_DIR_Built/dist/ssosync_linux_amd64_v1/ssosync

      # Check that the executable works
      - $CODEBUILD_SRC_DIR_Built/dist/ssosync_linux_amd64_v1/ssosync --version
      - mv $CODEBUILD_SRC_DIR_Built/dist/ssosync_linux_arm64_v8.2/ssosync bootstrap

  build:
    commands:
      # Create staging & release variants of the sar-template.json
      - jq '.Metadata["AWS::ServerlessRepo::Application"].Name = "SSOSync-Staging"' "${SAR_TEMPLATE}" > ./staging.json
      - sam package --force-upload --no-progressbar --template-file staging.json --s3-bucket ${S3Bucket} --output-template-file packaged-staging.yaml

      - jq '.Metadata["AWS::ServerlessRepo::Application"].Name = "SSOSync"' "${SAR_TEMPLATE}" > ./release.json
      - sam package --force-upload --no-progressbar --template-file release.json --s3-bucket ${S3Bucket} --output-template-file packaged-release.yaml

      - ls packaged-staging.yaml
      - ls packaged-release.yaml

  post_build:
    commands:
      # Create parameters from metadata
      # exemple: {"project_name":"ssosync","tag":"v2.2.10","previous_tag":"v2.2.9","version":"2.2.10-SNAPSHOT-2adae4a","commit":"2adae4a3c30d124cac2116193c2fe8f88c01ff2f","date":"2025-06-02T13:49:30.20931974Z","runtime":{"goos":"linux","goarch":"arm64"}}
      - echo "AppVersion=${AppVersion}"
      - aws ssm put-parameter --name "/SSOSync/Staging/Version" --value ${AppVersion} --type String --overwrite

      # remove the previous builds
      #- aws serverlessrepo delete-application --application-id ${AppArn}

      - echo sam publish --template packaged-staging.yaml --semantic-version ${AppVersion}
      - sam publish --template packaged-staging.yaml --semantic-version ${AppVersion}

      # Share with the StagingAccount
      - |
        if expr "${ShareWith}" : "NOT-SHARED" >/dev/null; then
          echo "Skipping Sharing"
        else
          aws serverlessrepo put-application-policy --application-id ${AppArn} --statements Principals=${ShareWith},Actions=Deploy
        fi

artifacts:
  files:
    - packaged-staging.yaml
    - packaged-release.yaml
